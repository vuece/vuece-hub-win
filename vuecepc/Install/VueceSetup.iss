; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)

#include "rootdir.inc"
#include "version.inc"

;#define VueceHubProjectDir "C:\Users\jj\git\vuece-hub-win\vuecepc"
;#define VueceHubInstallSourceDir_Debug "C:\Users\jj\git\vuece-hub-win\Debug"
;TODO - Change 'Release' to 'Debug' for production;#define VueceHubInstallSourceDir_Release "C:\Users\jj\git\vuece-hub-win\Debug"
#define VueceHubInstallSourceDir_Release VueceHubProjectDir+"\Release"     
#define VueceHubInstall_DLL_Location_SSL VueceHubProjectDir+"\Install\Components\ssl"
#define VueceHubInstall_DLL_Location_FFMPEG VueceHubProjectDir+"\Install\Components\ffmpeg"              #define VueceHubInstallSourceDir_Resources VueceHubProjectDir+"\res"
#define VueceVersionNumber GetFileVersion(VueceHubProjectDir+"\Release\vuecepc.exe")#define VueceAppWebSiteAddr "http://localhost:4000"
#define VueceLogoFileName "applogo_v4_blue_dark.ico"
#define VueceLogoFileName_Uninstall "applogo_gray.ico"
#define VueceWebPageIconFileName "globe.ico"

;SignTool=signtool  
PrivilegesRequired=admin
AppId={{39D43C3A-9A08-40FF-88E9-C7CAE7D72A1E}
AppName=VueceMusicHub
AppVersion={#VersionMajor}.{#VersionMinor}.{#BuildNumber}.{#RevisionNumber}AppVerName=VueceMusicHub {#VersionMajor}.{#VersionMinor}.{#BuildNumber}.{#RevisionNumber}

VersionInfoVersion={#VueceVersionNumber}AppPublisher=Vuece Technology, Inc.
;AppPublisher=Vuece Inc

AppPublisherURL={#VueceAppWebSiteAddr}
AppSupportURL={#VueceAppWebSiteAddr}
AppUpdatesURL={#VueceAppWebSiteAddr}
DefaultDirName={pf}\VueceHub
DefaultGroupName=VueceHub
VersionInfoCopyright=Copyright (C) 2015-2016 Vuece, Inc.

AllowNoIcons=yes
;Licebse files are specified in [Languages] section
;LicenseFile={#VueceHubProjectDir}\Install\VueceHubLicense.rtf
;InfoBeforeFile={#VueceHubProjectDir}\Install\VueceHubInstall.rtf
;InfoAfterFile={#VueceHubProjectDir}\Install\VueceHubAfterInstall.rtf
OutputDir={#VueceHubProjectDir}\Install\Output

OutputBaseFilename=VueceHubSetup-{#VueceVersionNumber}

SetupIconFile={#VueceHubInstallSourceDir_Resources}\logo_ico\{#VueceLogoFileName}
UninstallDisplayIcon=={app}\{#VueceLogoFileName_Uninstall}
Compression=lzma
SolidCompression=yes
;bmp file doesn't display well so use defualt icon for now
;WizardSmallImageFile=applogo_blue.bmp

AppMutex=VueceMusicHub2015


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl";   LicenseFile: "{#VueceHubProjectDir}\Install\LICENSE.rtf"
;Name: "chinese"; MessagesFile: "compiler:Languages\ChineseSimplified.isl" ;   LicenseFile: "{#VueceHubProjectDir}\Install\VueceHubLicense-ChineseSimplified.rtf"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; OnlyBelowVersion: 0,6.1
;Name: startup; Description: "Automatically start when starting windows"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files];The icon pointef by VueceLogoFileName_Uninstall is only used by setting up the icon of uninstall exe file, after that, this icon can be deleted        deleteafterinstall
Source: "{#VueceHubInstallSourceDir_Resources}\logo_ico\{#VueceLogoFileName_Uninstall}"; DestDir: "{app}"; Flags: ignoreversion 
Source: "{#VueceHubInstallSourceDir_Resources}\logo_ico\{#VueceWebPageIconFileName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstallSourceDir_Release}\vuecepc.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_FFMPEG}\avcodec-53.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_FFMPEG}\avdevice-53.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_FFMPEG}\avfilter-2.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_FFMPEG}\avformat-53.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_FFMPEG}\avutil-51.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_FFMPEG}\swresample-0.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_FFMPEG}\swscale-2.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_SSL}\libeay32.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_SSL}\libssl32.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstall_DLL_Location_SSL}\ssleay32.dll"; DestDir: "{app}"; Flags: ignoreversionSource: "{#VueceHubProjectDir}\Install\LICENSE.rtf"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubProjectDir}\Install\README.rtf"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#VueceHubInstallSourceDir_Release}\zh-CN\*"; DestDir: "{app}\zh-CN"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
;Source: ver_major.dat; DestDir: {tmp}; Flags: dontcopy
;Source: ver_minor.dat; DestDir: {tmp}; Flags: dontcopy
;Source: ver_build.dat; DestDir: {tmp}; Flags: dontcopy
;Source: ver_revision.dat; DestDir: {tmp}; Flags: dontcopy
;install Update Wizard files during app installation
;Source: "{#VueceHubProjectDir}\Install\UpdateWizard\wuwinstaller.exe"; DestDir: "{tmp}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons];Name: "{commonstartup}\My Program"; Filename: "{app}\vuecepc.exe";Note - Auto start now is done in code, so need to use the following line
;Name: "{commonstartup}\My Program"; Filename: "{app}\vuecepc.exe"; Parameters: "auto"Name: "{group}\VueceHub"; Filename: "{app}\vuecepc.exe";
Name: "{group}\{cm:ProgramOnTheWeb,VueceHub}"; Filename: "{#VueceAppWebSiteAddr}";IconFilename: "{app}\{#VueceWebPageIconFileName}";    
Name: "{group}\{cm:UninstallProgram,VueceHub}"; Filename: "{uninstallexe}"; IconFilename: "{app}\{#VueceLogoFileName_Uninstall}"; 
Name: "{commondesktop}\VueceHub"; Filename: "{app}\vuecepc.exe"; Tasks: desktopicon;
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\VueceHub"; Filename: "{app}\vuecepc.exe"; Tasks: quicklaunchicon;

[Run]
;Filename: "{tmp}\wuwinstaller.exe"; Parameters: "/S";  StatusMsg: "Installing Update Wizard for Vuece...";
Filename: "{app}\vuecepc.exe"; Description: "{cm:LaunchProgram,VueceHub}"; Flags: nowait postinstall skipifsilentFilename: "{#VueceAppWebSiteAddr}"; Description: "Visit Vuece website to get more information"; Flags: postinstall shellexec

[UninstallRun]
;Filename: "wuwuninst.exe"; Parameters: "/S";  StatusMsg: "Uninstalling Update...";

[Registry]
;uninsdeletekey - delete the keys during uninstallation
Root: HKCU; Subkey: Software\VueceHub; ValueType: string; ValueName: VersionMajor; ValueData: {#VersionMajor}; Flags: uninsdeletekey
Root: HKCU; Subkey: Software\VueceHub; ValueType: string; ValueName: VersionMinor; ValueData: {#VersionMinor}; Flags: uninsdeletekey
Root: HKCU; Subkey: Software\VueceHub; ValueType: string; ValueName: BuildNumber; ValueData: {#BuildNumber}; Flags: uninsdeletekey
Root: HKCU; Subkey: Software\VueceHub; ValueType: string; ValueName: RevisionNumber; ValueData: {#RevisionNumber}; Flags: uninsdeletekey
[Code]
var 
  bIsUpgrade: boolean;
function GetAppID(param: String): String;
	begin
		Result := '{39D43C3A-9A08-40FF-88E9-C7CAE7D72A1E}';
	end;

function GetPathInstalled(AppID: String): String;
	var
		PrevPath: String;
	begin
		PrevPath := '';
		if not RegQueryStringValue(HKLM, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1', 'Inno Setup: App Path', PrevPath) then begin
			RegQueryStringValue(HKCU, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1', 'Inno Setup: App Path', PrevPath);
		end;
		Result := PrevPath;
	end;

function GetAppVersion(AppVersion: String): String;
	begin
		Result := AppVersion;
	end;


function GetInstalledMajorVersion(): String;
	var
		InstalledMajorVersion: String;
	begin
		InstalledMajorVersion := '';
		RegQueryStringValue(HKCU, 'Software\VueceHub', 'VersionMajor', InstalledMajorVersion);
		Result := InstalledMajorVersion;
	end;
	
function GetInstalledMinorVersion(): String;
	var
		InstalledMinorVersion: String;
	begin
		InstalledMinorVersion := '';
		RegQueryStringValue(HKCU, 'Software\VueceHub', 'VersionMinor', InstalledMinorVersion);
		Result := InstalledMinorVersion;
	end;

function GetInstalledBuildBuildNumber(): String;
	var
		InstalledBuildNumber: String;
	begin
		InstalledBuildNumber := '';
		RegQueryStringValue(HKCU, 'Software\VueceHub', 'BuildNumber', InstalledBuildNumber);
		Result := InstalledBuildNumber;
	end;

function GetInstalledRevisionNumber(): String;
	var
		InstalledRevisionNumber: String;
	begin
		InstalledRevisionNumber := '';
		RegQueryStringValue(HKCU, 'Software\VueceHub', 'RevisionNumber', InstalledRevisionNumber);
		Result := InstalledRevisionNumber;
	end;

function InitializeSetup(): Boolean;
	var
		Response: Integer;
		PrevDir: String;
		InstalledMajorVersion: String;
		InstalledMinorVersion: String;
		InstalledBuildNumber: String;
		InstalledRevNumber: String;
		InstalledVersion: String;
		
		NewAppMajorVersion: String;
		NewAppMinorVersion: String;
		NewAppBuildNumber: String;
		NewAppRevNumber: String;
		NewAppVersion: String;
    NeedUpdate: Boolean;

    SameVersion: Boolean;

	begin
		Result := true;
    NeedUpdate := false;

		// read the installtion folder
		PrevDir := GetPathInstalled(getAppID(''));

		if length(Prevdir) > 0 then begin

      Log('This is an update');
      bIsUpgrade := true;

			//retrieve installed app version number
			InstalledMajorVersion := GetInstalledMajorVersion();
			InstalledMinorVersion := GetInstalledMinorVersion();
			InstalledBuildNumber := GetInstalledBuildBuildNumber();
			InstalledRevNumber := GetInstalledRevisionNumber();
			
			
			InstalledVersion := InstalledMajorVersion + '.' + InstalledMinorVersion + '.' + InstalledBuildNumber + '.' + InstalledRevNumber;
					
			//retrieve version info of the app to be installed
			NewAppMajorVersion := '{#VersionMajor}';
			NewAppMinorVersion := '{#VersionMinor}';
			NewAppBuildNumber := '{#BuildNumber}';
			NewAppRevNumber := '{#RevisionNumber}';
			
			NewAppVersion := NewAppMajorVersion + '.' + NewAppMinorVersion + '.' + NewAppBuildNumber + '.' + NewAppRevNumber;

      if( (NewAppMajorVersion = InstalledMajorVersion) and (NewAppMinorVersion = InstalledMinorVersion) and (NewAppBuildNumber = InstalledBuildNumber) and (NewAppRevNumber = InstalledRevNumber)) then begin
          SameVersion := true;
      end else if (NewAppMajorVersion > InstalledMajorVersion) then begin
         NeedUpdate := true;
      end else if(NewAppMajorVersion = InstalledMajorVersion) then begin
        if(NewAppMinorVersion > InstalledMinorVersion) then begin
            NeedUpdate := true;
        end else if (NewAppMinorVersion = InstalledMinorVersion) then begin
            if(NewAppBuildNumber > InstalledBuildNumber) then begin
              NeedUpdate := true;
            end else if (NewAppBuildNumber = InstalledBuildNumber) then begin
            	if(NewAppRevNumber > InstalledRevNumber) then begin
              	NeedUpdate := true;
            end;
            end;
        end;   
         		
      end;

      if(NeedUpdate = true) then begin
      	Result := true;
      end else if(SameVersion) then begin
          Response := MsgBox(
          'It appears that the existing VueceHub installation(v' + InstalledVersion + ') is the same as this update.'
          + #13#13 +
          'Do you still want to continue with this update installation?', mbError, MB_YESNO
        );
        Result := (Response = IDYES);       
      end else begin
               Response := MsgBox(
                'It appears that the existing VueceHub installation(v' + InstalledVersion + ') is newer than this update (v' + NewAppVersion + ').'
                + #13#13 +
                'Do you still want to continue with this update installation?', mbError, MB_YESNO
              );
              Result := (Response = IDYES);    
      end;

    end;

    end;

function ShouldSkipPage(PageID: Integer): Boolean;
	begin
		// skip selectdir if It's an upgrade
		if ((PageID = wpSelectDir) and bIsUpgrade) then begin
			Result := true;
		end else if ((PageID = wpSelectProgramGroup) and bIsUpgrade) then begin
			Result := true;
		end else if ((PageID = wpSelectTasks) and bIsUpgrade) then begin
			Result := true;
		end else begin
			Result := false;
		end;
	end;





